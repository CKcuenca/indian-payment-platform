name: Deploy to Test Environment

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  deploy-test:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: |
          client/package-lock.json
          server/package-lock.json
          
    - name: Install server dependencies
      run: |
        cd server
        npm ci
        
    - name: Install client dependencies
      run: |
        cd client
        npm ci
        
    - name: Build frontend for test environment
      run: |
        cd client
        # 使用测试环境专用构建脚本
        npm run build:test
        
    - name: Deploy to Test Environment
      uses: appleboy/ssh-action@v1.0.3
      with:
        host: ${{ secrets.EC2_HOST }}
        username: ${{ secrets.EC2_USERNAME }}
        key: ${{ secrets.EC2_SSH_KEY }}
        port: ${{ secrets.EC2_PORT }}
        timeout: 120s
        command_timeout: 60s
        script: |
          cd /var/www/test.cashgit.com
          
          # 同步Git仓库到最新版本
          git fetch origin
          git reset --hard origin/main
          git clean -fd
          
          # 备份当前版本
          if [ -d "backup" ]; then
            rm -rf backup
          fi
          mkdir -p backup
          cp -r client/build backup/client_build_$(date +%Y%m%d_%H%M%S) 2>/dev/null || true
          cp -r server backup/server_$(date +%Y%m%d_%H%M%S) 2>/dev/null || true
          
          # 停止测试环境服务
          pm2 stop test-indian-payment-platform || true
          
          # 等待服务完全停止
          sleep 3
          
          echo "Test environment Git sync completed and service stopped"
          
    - name: Upload built files to test
      uses: appleboy/scp-action@v0.1.7
      with:
        host: ${{ secrets.EC2_HOST }}
        username: ${{ secrets.EC2_USERNAME }}
        key: ${{ secrets.EC2_SSH_KEY }}
        port: ${{ secrets.EC2_PORT }}
        source: "client/build/*"
        target: "/var/www/test.cashgit.com/client/build"
        strip_components: 2
        
    - name: Upload server files to test
      uses: appleboy/scp-action@v0.1.7
      with:
        host: ${{ secrets.EC2_HOST }}
        username: ${{ secrets.EC2_USERNAME }}
        key: ${{ secrets.EC2_SSH_KEY }}
        port: ${{ secrets.EC2_PORT }}
        source: "server/*"
        target: "/var/www/test.cashgit.com/server"
        strip_components: 1
        
    - name: Restart test services
      uses: appleboy/ssh-action@v1.0.3
      with:
        host: ${{ secrets.EC2_HOST }}
        username: ${{ secrets.EC2_USERNAME }}
        key: ${{ secrets.EC2_SSH_KEY }}
        port: ${{ secrets.EC2_PORT }}
        timeout: 300s
        command_timeout: 180s
        script: |
          # 简化进程清理
          echo "清理现有进程..."
          pm2 stop test-indian-payment-platform || true
          pm2 delete test-indian-payment-platform || true
          sleep 2
          
          cd /var/www/test.cashgit.com
          
          # 创建必要目录
          mkdir -p logs server/logs
          
          # 安装服务端依赖
          cd server
          npm ci --only=production
          cd ..
          
          # 设置环境变量并启动服务
          export NODE_ENV=test
          export PORT=3002
          
          if [ -f "ecosystem.test.config.js" ]; then
            echo "使用测试环境配置启动..."
            pm2 start ecosystem.test.config.js
          else
            echo "使用默认配置启动..."
            pm2 start server/index.js \
              --name "test-indian-payment-platform" \
              --time \
              --env NODE_ENV=test \
              --env PORT=3002 \
              --log logs/combined.log \
              --error logs/err.log \
              --out logs/out.log
          fi
          
          # 简化启动验证
          echo "等待服务启动..."
          sleep 10
          
          # 快速验证
          echo "=== 测试环境部署验证 ==="
          pm2 list | grep test-indian-payment-platform || echo "进程未找到"
          netstat -tlnp | grep :3002 || echo "端口未监听"
          
          # 单次健康检查
          echo "健康检查..."
          if curl -s --connect-timeout 3 http://localhost:3002/api/health; then
            echo "✅ 健康检查成功!"
          else
            echo "❌ 健康检查失败，查看详细信息："
            echo "环境变量: NODE_ENV=$NODE_ENV, PORT=$PORT"
            echo "进程日志:"
            pm2 logs test-indian-payment-platform --lines 5 --nostream || echo "无法获取日志"
          fi
          
          echo "=========================="
          echo "Test environment deployment completed!"




